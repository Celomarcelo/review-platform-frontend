{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useParams,useNavigate,Link}from'react-router-dom';import{isTokenValid}from'./Auth';/**\n * FilteredReviews Component\n * \n * This component displays a filtered list of reviews based on a selected category or genre.\n * It retrieves category and genre IDs from the URL parameters, makes an API request to \n * fetch the filtered reviews, and displays them on the page.\n *\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FilteredReviews=()=>{const[reviews,setReviews]=useState([]);// State to store filtered reviews\nconst[error,setError]=useState(null);// State for error messages\nconst{categoryId,genreId}=useParams();// Retrieve category and genre IDs from URL parameters\nconst navigate=useNavigate();// Fetch reviews based on category or genre when component mounts or URL parameters change\nuseEffect(()=>{// Check if token is valid; if not, redirect to login\nif(!isTokenValid()){navigate('/api/login/');return;}const token=localStorage.getItem('token');let apiUrl='/reviews/';// Build the API endpoint based on whether category or genre is provided\nif(genreId){apiUrl+=`?genre=${genreId}`;}else if(categoryId){apiUrl+=`?category=${categoryId}`;}// Fetch filtered reviews from the API\naxios.get(apiUrl,{headers:{'Authorization':`Bearer ${token}`}}).then(response=>{setReviews(response.data);// Update state with fetched reviews\n}).catch(error=>{setError('Failed to load reviews.');// Set error message if request fails\nconsole.error(error);});},[categoryId,genreId,navigate]);return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column align-items-center mt-5\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reviews\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),!error&&reviews.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No reviews found for the selected category or genre.\"}),/*#__PURE__*/_jsx(\"ul\",{children:reviews.map(review=>/*#__PURE__*/_jsxs(\"li\",{className:\"mt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"review-container\",style:{position:'relative',margin:'auto'},children:[review.img&&/*#__PURE__*/_jsx(\"img\",{src:review.img,alt:review.title,className:\"img-fluid\",style:{maxWidth:'200px',height:'auto',display:'block',margin:'0 auto'}}),review.user&&review.user.profile_image&&/*#__PURE__*/_jsx(Link,{to:`/user/${review.user.id}/reviewsList`,children:/*#__PURE__*/_jsx(\"img\",{src:review.user.profile_image,alt:review.user.username,className:\"profile-image\",style:{position:'absolute',bottom:'5px',right:'70px',width:'70px',height:'70px',borderRadius:'50%',border:'2px solid white',objectFit:'cover',cursor:'pointer'}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(Link,{to:`/reviews/${review.id}`,children:review.title}),\" - \",review.author_director]})]},review.id))})]});};export default FilteredReviews;","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Link","isTokenValid","jsx","_jsx","jsxs","_jsxs","FilteredReviews","reviews","setReviews","error","setError","categoryId","genreId","navigate","token","localStorage","getItem","apiUrl","get","headers","then","response","data","catch","console","className","children","length","map","review","style","position","margin","img","src","alt","title","maxWidth","height","display","user","profile_image","to","id","username","bottom","right","width","borderRadius","border","objectFit","cursor","author_director"],"sources":["/Users/marcelotavares/Desktop/newBooks/newBooksFrontend/review-platform-frontend/src/components/FilteredResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { isTokenValid } from './Auth';\n\n/**\n * FilteredReviews Component\n * \n * This component displays a filtered list of reviews based on a selected category or genre.\n * It retrieves category and genre IDs from the URL parameters, makes an API request to \n * fetch the filtered reviews, and displays them on the page.\n *\n */\n\nconst FilteredReviews = () => {\n    const [reviews, setReviews] = useState([]);  // State to store filtered reviews\n    const [error, setError] = useState(null);  // State for error messages\n    const { categoryId, genreId } = useParams();  // Retrieve category and genre IDs from URL parameters\n    const navigate = useNavigate();\n\n    // Fetch reviews based on category or genre when component mounts or URL parameters change\n    useEffect(() => {\n        // Check if token is valid; if not, redirect to login\n        if (!isTokenValid()) {\n            navigate('/api/login/');\n            return;\n        }\n\n        const token = localStorage.getItem('token');\n        let apiUrl = '/reviews/';\n\n        // Build the API endpoint based on whether category or genre is provided\n        if (genreId) {\n            apiUrl += `?genre=${genreId}`;\n        } else if (categoryId) {\n            apiUrl += `?category=${categoryId}`;\n        }\n\n        // Fetch filtered reviews from the API\n        axios.get(apiUrl, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n        })\n            .then(response => {\n                setReviews(response.data);  // Update state with fetched reviews\n            })\n            .catch(error => {\n                setError('Failed to load reviews.');  // Set error message if request fails\n                console.error(error);\n            });\n    }, [categoryId, genreId, navigate]);\n\n    return (\n        <div className=\"d-flex flex-column align-items-center mt-5\">\n            <h2>Reviews</h2>\n            {/* Display error message if there was an error during data fetching */}\n            {error && <p>{error}</p>}\n\n            {/* Display a message if no reviews are found */}\n            {!error && reviews.length === 0 && (\n                <p>No reviews found for the selected category or genre.</p>\n            )}\n\n            <ul>\n                {/* Map through the reviews array and render each review */}\n                {reviews.map(review => (\n                    <li key={review.id} className=\"mt-5\">\n                        <div className=\"review-container\" style={{ position: 'relative', margin: 'auto' }}>\n                            {/* If the review has an image, display it */}\n                            {review.img && (\n                                <img\n                                    src={review.img}\n                                    alt={review.title}\n                                    className=\"img-fluid\"\n                                    style={{ maxWidth: '200px', height: 'auto', display: 'block', margin: '0 auto' }}\n                                />\n                            )}\n\n                            {/* Display the user profile picture at the bottom-right corner of the review image */}\n                            {review.user && review.user.profile_image && (\n                                <Link to={`/user/${review.user.id}/reviewsList`}>\n                                    <img\n                                        src={review.user.profile_image}\n                                        alt={review.user.username}\n                                        className=\"profile-image\"\n                                        style={{\n                                            position: 'absolute',\n                                            bottom: '5px',\n                                            right: '70px',\n                                            width: '70px',\n                                            height: '70px',\n                                            borderRadius: '50%',\n                                            border: '2px solid white',\n                                            objectFit: 'cover',\n                                            cursor: 'pointer'\n                                        }}\n                                    />\n                                </Link>\n                            )}\n                        </div>\n                        <div className='mt-3'>\n                            {/* Link to the detailed review page */}\n                            <Link to={`/reviews/${review.id}`}>{review.title}</Link> - {review.author_director}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default FilteredReviews;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}