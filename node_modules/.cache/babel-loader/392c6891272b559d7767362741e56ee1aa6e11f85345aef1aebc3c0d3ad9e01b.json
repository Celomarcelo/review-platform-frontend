{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import axios from'axios';import{isTokenValid}from'./Auth';/**\n * EditReview Component\n * \n * This component allows users to edit an existing review. It fetches the review data using\n * the review ID from the URL, and provides form inputs for modifying the review fields.\n * It also includes functionality for image upload and form submission with error handling.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditReview=()=>{// Extract review ID from the route parameters\nconst{reviewId}=useParams();// State for storing review data and form input values\nconst[review,setReview]=useState({});const[form,setForm]=useState({title:'',content:'',genre:'',rating:'',img:null});const[genres,setGenres]=useState([]);// Stores genres associated with the review's category\nconst[error,setError]=useState('');// State to store error messages\nconst navigate=useNavigate();// Navigation hook for redirection\nconst token=localStorage.getItem('token');// Retrieve token from local storage\n// Fetch the review details from the server when the component is mounted\nuseEffect(()=>{// Check if the token is valid, if not, redirect to login page\nif(!isTokenValid()){navigate('/api/login/');return;}// Fetch the review data from the server\nconst fetchReview=async()=>{try{const response=await axios.get(`/reviews/${reviewId}/`,{headers:{Authorization:`Bearer ${token}`}// Include the token in the request header\n});const reviewData=response.data;setReview(reviewData);// Sets review data in the state\nsetForm({title:reviewData.title,content:reviewData.content,genre:reviewData.genre,rating:reviewData.rating,img:null// Image upload is optional and will not be fetched\n});// Fetches genres based on category ID if present\nconst categoryId=reviewData.category_id;if(categoryId){const categoryResponse=await axios.get(`/categories/${categoryId}/genres/`,{headers:{Authorization:`Bearer ${token}`}});setGenres(categoryResponse.data);// Updates genres in state\n}}catch(error){// Handle error in fetching the review details\nsetError('An error occurred while fetching the review details.');console.error(error);}};fetchReview();},[reviewId,token,navigate]);/**\n     * handleInputChange\n     * \n     * This function updates the form state when the user types in the form fields.\n     */const handleInputChange=e=>{const{name,value}=e.target;// Get the input name and value\nsetForm({...form,[name]:value// Update the corresponding form field in the state\n});};/**\n     * handleImageChange\n     * \n     * This function handles the change event when a user selects an image to upload.\n     */const handleImageChange=e=>{const file=e.target.files[0];// Get the selected image file\nsetForm({...form,img:file// Update the img field in the form state\n});};/**\n     * handleSave\n     * \n     * This function is called when the user saves the edited review.\n     * It sends a PUT request to update the review on the server.\n     */const handleSave=async()=>{// Create FormData to handle both text and file uploads\nconst formData=new FormData();formData.append('title',form.title);formData.append('content',form.content);formData.append('genre',form.genre);formData.append('rating',form.rating);if(form.img){formData.append('img',form.img);// If a new image was selected, append it\n}try{// Send PUT request to update the review\nawait axios.put(`/reviews/${reviewId}/`,formData,{headers:{Authorization:`Bearer ${token}`,'Content-Type':'multipart/form-data'}});navigate('/profile');// Redirect to the profile page after successful update\n}catch(error){setError('An error occurred while saving the review.');console.error(error);}};/**\n     * handleCancel\n     * \n     * This function is called when the user cancels editing. It redirects to the profile page.\n     */const handleCancel=()=>{navigate('/profile');};return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-column align-items-center my-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container my-5 text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:review.title}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:form.title,onChange:handleInputChange,className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Content\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",value:form.content,onChange:handleInputChange,className:\"form-control\",style:{height:'200px'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Genre\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"genre\",value:form.genre,onChange:handleInputChange,className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:review.genre_name||\"Select a genre\"}),genres.map(genre=>/*#__PURE__*/_jsx(\"option\",{value:genre.id,children:genre.name},genre.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Rating\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"rating\",value:form.rating,onChange:handleInputChange,className:\"form-control\",min:\"0\",max:\"5\"// Limits rating input between 0 and 5\n})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Image\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleImageChange,className:\"form-control\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success me-2\",onClick:handleSave,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:handleCancel,children:\"Cancel\"})]})});};export default EditReview;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","isTokenValid","jsx","_jsx","jsxs","_jsxs","EditReview","reviewId","review","setReview","form","setForm","title","content","genre","rating","img","genres","setGenres","error","setError","navigate","token","localStorage","getItem","fetchReview","response","get","headers","Authorization","reviewData","data","categoryId","category_id","categoryResponse","console","handleInputChange","e","name","value","target","handleImageChange","file","files","handleSave","formData","FormData","append","put","handleCancel","className","children","type","onChange","style","height","genre_name","map","id","min","max","onClick"],"sources":["/Users/marcelotavares/Desktop/newBooks/newBooksFrontend/review-platform-frontend/src/components/EditReview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { isTokenValid } from './Auth';\n\n/**\n * EditReview Component\n * \n * This component allows users to edit an existing review. It fetches the review data using\n * the review ID from the URL, and provides form inputs for modifying the review fields.\n * It also includes functionality for image upload and form submission with error handling.\n */\n\nconst EditReview = () => {\n    // Extract review ID from the route parameters\n    const { reviewId } = useParams();\n\n    // State for storing review data and form input values\n    const [review, setReview] = useState({});\n    const [form, setForm] = useState({\n        title: '',\n        content: '',\n        genre: '',\n        rating: '',\n        img: null,\n    });\n\n    const [genres, setGenres] = useState([]);  // Stores genres associated with the review's category\n    const [error, setError] = useState('');  // State to store error messages\n    const navigate = useNavigate();  // Navigation hook for redirection\n    const token = localStorage.getItem('token');  // Retrieve token from local storage\n\n    // Fetch the review details from the server when the component is mounted\n    useEffect(() => {\n        // Check if the token is valid, if not, redirect to login page\n        if (!isTokenValid()) {\n            navigate('/api/login/');\n            return;\n        }\n\n        // Fetch the review data from the server\n        const fetchReview = async () => {\n            try {\n                const response = await axios.get(`/reviews/${reviewId}/`, {\n                    headers: { Authorization: `Bearer ${token}` },  // Include the token in the request header\n                });\n                const reviewData = response.data;\n\n                setReview(reviewData);  // Sets review data in the state\n                setForm({\n                    title: reviewData.title,\n                    content: reviewData.content,\n                    genre: reviewData.genre,\n                    rating: reviewData.rating,\n                    img: null,  // Image upload is optional and will not be fetched\n                });\n\n                // Fetches genres based on category ID if present\n                const categoryId = reviewData.category_id;\n                if (categoryId) {\n                    const categoryResponse = await axios.get(`/categories/${categoryId}/genres/`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setGenres(categoryResponse.data);  // Updates genres in state\n                }\n            } catch (error) {\n                // Handle error in fetching the review details\n                setError('An error occurred while fetching the review details.');\n                console.error(error);\n            }\n        };\n\n        fetchReview();\n    }, [reviewId, token, navigate]);\n\n    /**\n     * handleInputChange\n     * \n     * This function updates the form state when the user types in the form fields.\n     */\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;  // Get the input name and value\n        setForm({\n            ...form,\n            [name]: value,  // Update the corresponding form field in the state\n        });\n    };\n\n    /**\n     * handleImageChange\n     * \n     * This function handles the change event when a user selects an image to upload.\n     */\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];  // Get the selected image file\n        setForm({\n            ...form,\n            img: file,  // Update the img field in the form state\n        });\n    };\n\n    /**\n     * handleSave\n     * \n     * This function is called when the user saves the edited review.\n     * It sends a PUT request to update the review on the server.\n     */\n    const handleSave = async () => {\n        // Create FormData to handle both text and file uploads\n        const formData = new FormData();\n        formData.append('title', form.title);\n        formData.append('content', form.content);\n        formData.append('genre', form.genre);\n        formData.append('rating', form.rating);\n\n        if (form.img) {\n            formData.append('img', form.img);  // If a new image was selected, append it\n        }\n\n        try {\n            // Send PUT request to update the review\n            await axios.put(`/reviews/${reviewId}/`, formData, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            navigate('/profile');  // Redirect to the profile page after successful update\n        } catch (error) {\n            setError('An error occurred while saving the review.');\n            console.error(error);\n        }\n    };\n\n    /**\n     * handleCancel\n     * \n     * This function is called when the user cancels editing. It redirects to the profile page.\n     */\n    const handleCancel = () => {\n        navigate('/profile');\n    };\n\n    return (\n        <div className=\"d-flex flex-column align-items-center my-5\">\n            <div className=\"container my-5 text-center\">\n                {/* Display the current review title */}\n                <h1>{review.title}</h1>\n                {/* Display error message if there is one */}\n                {error && <p className=\"text-danger\">{error}</p>}\n\n                {/* Title input field */}\n                <div className=\"mb-3\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        value={form.title}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                {/* Content textarea field */}\n                <div className=\"mb-3\">\n                    <label>Content</label>\n                    <textarea\n                        name=\"content\"\n                        value={form.content}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        style={{ height: '200px' }}\n                    ></textarea>\n                </div>\n\n                {/* Genre input field */}\n                <div className=\"mb-3\">\n                    <label>Genre</label>\n                    <select\n                        name=\"genre\"\n                        value={form.genre}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                    >\n                        <option value=\"\">{review.genre_name || \"Select a genre\"}</option>\n                        {genres.map((genre) => (\n                            <option key={genre.id} value={genre.id}>\n                                {genre.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                {/* Rating input field */}\n                <div className=\"mb-3\">\n                    <label>Rating</label>\n                    <input\n                        type=\"number\"\n                        name=\"rating\"\n                        value={form.rating}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        min=\"0\"\n                        max=\"5\"  // Limits rating input between 0 and 5\n                    />\n                </div>\n\n                {/* Image upload field */}\n                <div className=\"mb-3\">\n                    <label>Image</label>\n                    <input\n                        type=\"file\"\n                        onChange={handleImageChange}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                {/* Save and Cancel buttons */}\n                <button className=\"btn btn-success me-2\" onClick={handleSave}>Save</button>\n                <button className=\"btn btn-danger\" onClick={handleCancel}>Cancel</button>\n            </div>\n        </div>\n    );\n};\n\nexport default EditReview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}